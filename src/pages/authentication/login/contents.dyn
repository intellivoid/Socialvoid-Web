<?php

    use DynamicalWeb\Cookies;
    use DynamicalWeb\DynamicalWeb;
    use DynamicalWeb\Exceptions\CookieStorageNotFoundException;
    use SocialvoidLib\Exceptions\Standard\Authentication\AlreadyAuthenticatedException;
    use SocialvoidLib\Exceptions\Standard\Authentication\AuthenticationFailureException;
    use SocialvoidLib\Exceptions\Standard\Authentication\AuthenticationNotApplicableException;
    use SocialvoidLib\Exceptions\Standard\Authentication\IncorrectLoginCredentialsException;
    use SocialvoidLib\Exceptions\Standard\Authentication\IncorrectTwoFactorAuthenticationCodeException;
    use SocialvoidLib\Exceptions\Standard\Authentication\PrivateAccessTokenRequiredException;
    use SocialvoidLib\Exceptions\Standard\Authentication\TwoFactorAuthenticationRequiredException;

    $active_request_handler = DynamicalWeb::activeRequestHandler();

    if(SV_AUTHENTICATED)
    {
        // Don't authenticate if the user is already authenticated
        $active_request_handler->Redirect = true;
        $active_request_handler->RedirectLocation = DynamicalWeb::getRoute('index', ['callback' => 'auth_101']);
        DynamicalWeb::activeRequestHandler($active_request_handler);
        return;
    }

    $required_parameters = [
        'login_username',
        'login_password',
        'login_captcha_answer'
    ];

    foreach($required_parameters as $parameter)
    {
        if(isset($active_request_handler->getParameters()[$parameter]) == false)
        {
            $active_request_handler->Redirect = true;
            $active_request_handler->RedirectLocation = DynamicalWeb::getRoute('index', ['callback' => 'auth_100', 'mp' => $parameter]);
            DynamicalWeb::activeRequestHandler($active_request_handler);
            return;
        }
    }

    try
    {
        $CookieStorage = Cookies::getCookieStorage('sv_session');
    }
    catch (CookieStorageNotFoundException $e)
    {
        $active_request_handler->Redirect = true;
        $active_request_handler->RedirectLocation = DynamicalWeb::getRoute('index');
        DynamicalWeb::activeRequestHandler($active_request_handler);
        return;
    }

    $networkSession = getNetworkSession();

    try
    {
        $networkSession->authenticateUser(
            $active_request_handler->getParameters()['login_username'],
            $active_request_handler->getParameters()['login_password'],
            ($active_request_handler->getParameters()['login_two_factor_code'] ?? null)
        );
    }
    catch (AlreadyAuthenticatedException $e)
    {
        handleStandardError('index', 'auth_109', $CookieStorage, $e);
        return;
    }
    catch (IncorrectLoginCredentialsException $e)
    {
        handleStandardError('index', 'auth_110', $CookieStorage, $e);
        return;
    }
    catch (TwoFactorAuthenticationRequiredException $e)
    {
        handleStandardError('index', 'auth_111', $CookieStorage, $e);
        return;
    }
    catch (IncorrectTwoFactorAuthenticationCodeException $e)
    {
        handleStandardError('index', 'auth_112', $CookieStorage, $e);
        return;
    }
    catch (AuthenticationNotApplicableException $e)
    {
        handleStandardError('index', 'auth_113', $CookieStorage, $e);
        return;
    }
    catch (PrivateAccessTokenRequiredException $e)
    {
        handleStandardError('index', 'auth_114', $CookieStorage, $e);
        return;
    }
    catch (AuthenticationFailureException $e)
    {
        handleStandardError('index', 'auth_115', $CookieStorage, $e);
        return;
    }

    /** @noinspection PhpUnhandledExceptionInspection */
    $CookieStorage = Cookies::getCookieStorage('sv_session');
    $CookieStorage->Data['authenticated'] = true;
    $CookieStorage->Data['authenticated_peer_id'] = getNetworkSession()->getAuthenticatedUser()->PublicID;
    $CookieStorage->Data['authenticated_peer_username'] = getNetworkSession()->getAuthenticatedUser()->Username;
    Cookies::updateCookieStorage($CookieStorage);

    $active_request_handler->Redirect = true;
    $active_request_handler->RedirectLocation = DynamicalWeb::getRoute('index');
    DynamicalWeb::activeRequestHandler($active_request_handler);
    return;